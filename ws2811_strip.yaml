substitutions:
  devicename: ws2811_strip
  upper_devicename: WS2811 strip 

esphome:
  name: $devicename
  platform: ESP8266
  board: d1_mini_lite

wifi:
  ssid: "xxx"
  password: "xxx"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "WS2811 strip Fallback Hotspot"
    password: "xxx"

captive_portal:

web_server:
  port: 80
  css_url: http://192.168.15.10:8123/local/webserver-v1.min.css #не отображаются состояния из-за отсутсвия сети или доступа к сайту разработчика https://github.com/esphome/issues/issues/648
  js_url: http://192.168.15.10:8123/local/webserver-v1.min.js

# Enable Home Assistant API
api:
 
# Enable OTA Access
ota:
 
# Enable verbose logging over serial
logger:

light:
  - platform: fastled_clockless
    chipset: WS2811
    pin: D4
    num_leds: 300
    rgb_order: GRB
    name: "Ёлка WS2811"
    effects:
      - addressable_rainbow:
          name: Rainbow Effect With Custom Values
          speed: 30
          width: 300
      - addressable_color_wipe:
          name: Color Wipe Effect With Custom Values
          colors:
            - red: 10%
              green: 10%
              blue: 100%
              num_leds: 1
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 1
          add_led_interval: 100ms
          reverse: False
      - random:
          name: "My Fast Random Effect"
          transition_length: 4s
          update_interval: 5s
      - strobe:
          name: Strobe Effect With Custom Values
          colors:
            - state: True
              brightness: 100%
              red: 100%
              green: 90%
              blue: 0%
              duration: 500ms
            - state: False
              duration: 250ms
            - state: True
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 500ms
      - addressable_scan:
          name: Scan Effect With Custom Values
          move_interval: 60ms
      - addressable_fireworks:
          name: Fireworks Effect With Custom Values
          update_interval: 32ms
          spark_probability: 10%
          use_random_color: false
          fade_out_rate: 120
          
# Общие данные по устройству
sensor:
  - platform: uptime
    id: uptime_sec
  - platform: wifi_signal
    name: ${upper_devicename} WiFi Signal
    id: wifis_signal
    update_interval: 900s

text_sensor:
  - platform: template
    name: ${upper_devicename} Uptime
    lambda: |-
      int seconds = (id(uptime_sec).state);
      int days = seconds / (24 * 3600);
      seconds = seconds % (24 * 3600); 
      int hours = seconds / 3600;
      seconds = seconds % 3600;
      int minutes = seconds /  60;
      seconds = seconds % 60;
      return { (String(days) +"d " + String(hours) +"h " + String(minutes) +"m "+ String(seconds) +"s").c_str() };
    icon: mdi:clock-start
    update_interval: 113s
  - platform: template
    name: ${upper_devicename} Wifi Strength
    icon: "mdi:wifi"
    lambda: |-
      if (id(wifis_signal).state > -50 ) {
        return {"Excellent"};
      } else if (id(wifis_signal).state > -60) {
        return {"Good"};
      } else if (id(wifis_signal).state > -70) {
        return {"Fair"};
      } else if (id(wifis_signal).state < -70) {
        return {"Weak"};
      } else {
        return {"None"};
      }
    update_interval: 900s
  - platform: version
    name: ${upper_devicename} Version
  - platform: template
    name: ${upper_devicename} MAC Address
    lambda: 'return {WiFi.macAddress().c_str()};'
    icon: mdi:fingerprint
    update_interval: 1d
    
switch:
  - platform: restart
    name: ${upper_devicename} Restart
